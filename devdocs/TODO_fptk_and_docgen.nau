
// DOC GEN =================================================

// TODOs ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	+ Remove requirement for `;;` comments to have double-semicolon
	+ Enhance recognition of if `#_ "comment"` belongs to prev `(import ...)` or next `(defn ...)`

    * prepare code for Spadoc?

// ____________________________________________________________________________/ }}}1



// FPTK ====================================================

// INFO: Composition order, Arguments order ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	(rcompose f1 f2)
	(-> data  f1 f2)
	(l> data   1  2)
	(p> data  f1 f2)

	(f params vrbl) // good for p> and ->> macro
	(f vrbl params) // good for -> macro

// ____________________________________________________________________________/ }}}1
// DESIGN GUIDELINES ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	Edge cases:
	- fptk list funcs must work with empty lists ?

	·······························

	What if getter founds no elem?
  	- None
  	- Error

  	variadic f(x1, x2, ...) vs f(xs)

  	polymorphic?
  	- yes
  	- no

  	arg order?
  	- for p> ->>
  	- for ->

  	wrong type handling? oddQ("str")?
  	- Error

  	Full/short name?
  	- fst
  	- first

  	use special symbols in names
  	- funcs - no
  	- macros - yes

// ____________________________________________________________________________/ }}}1
// FURTHER PLANS (Typing, Monads) ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	Cur:
	+ Typing (robust checks)
	* Immutable DTypes
	* Monads
	 
	Types:
	 
	is of type?
	func validation
	 
	ADT: product/sum
	dataclass
	Synonims
	Union
	Optional
	Enum
	Generic Types <A>, GenericListExample[int]
	List, Tuple, Nested
	Type[Shape]
	+ Inheritance?  
	 
	  type (exact)
	  isinstance (exact + subclasses) <- Union
	  Unions, Discr/Tagged Unions
	 
	 
	 
	Monads:
	 
	Maybe
	Result
	 
	Possible libs:
	- hy monad
	- returns
	- effects
	 
	Later:
	- Transformers

// ____________________________________________________________________________/ }}}1
// MACROS LIST ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	• f::
	• fm
	• f>
	• p>						
	• pluckm
	• lns
	• &+
	• &+>
	• l>
	• l>=		// TODO: (dndr> ) & recognition (bitwise_and, see lens docs)

	// =============================

	new:
	• => =>>		// optional «it», .attr access

	deprecated:
	• #L 
	• <-

// ____________________________________________________________________________/ }}}1

// curated todo list ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾\ {{{1

	Checks:
		• funcy: all_fn, isa
		• (of_len xs 3)
		+ (on len eq xs ys)

	Lambdas and composition:
		• (lmapm (print %1 "pupos") xs) -> (lmap (fm ()) xs)
		• [³NEW⁺] p> not working with fn/fm
		• fm/f>: - [⁴DOC⁺] can accept non-() forms
				 - [³NEW⁺] usage of _ as %1
		+ on_each(f, xs) -> None	// as map but with no result
		+ juxt_apply(fs, *xi)
		? shorter name for partial?

	APL:
		+ flatten -> work on levels?

	Benchmarking:
		• [³FIX⁺] logically should give result of last execution

	Wy-related:
		+ ncut equivalent (symbol «:» is taken)

	·······························

	Filtering:
		- itertools: take_while, drop_while
		- funcy: group_by, partition_by, count_by
		- split/partition/chunks/group
		- by/with/via/at

// ____________________________________________________________________________/ }}}1


	Publishing:
	- naming of variables = docnames
	- proper doc-strings
	- detailed md-doc? (¹ one-liner table + ² short table with links)
	- tests
	- throw meaningfull errors
	! move _macros_test.hy elsewhere


	Pip auto installation dir:
	D:\Soft_categories\Engn_Programming\miniconda3\Lib\site-packages\fptk
